@using BusinessObject.Models
@model IEnumerable<BusinessObject.Models.Product>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div style="padding: 0 10px">
    <h1>List Product</h1>

    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#CreateModal">Create New</button>
    <table class="table" style="margin-top: 20px">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Price)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Image)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Category)
                </th>
            </tr>
        </thead>
        <tbody id="productTableBody">
            @foreach (var item in Model)
            {
                <tr onclick="GetProduct(@item.Id)" style="cursor: pointer" data-bs-toggle="modal" data-bs-target="#ProductModal">
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        <img src="../imgProduct/@item.Image" alt="Image Product" style="width: 150px; height: 150px; object-fit: cover" />
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category.CategoryName)
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="modal fade" id="CreateModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="CreateModal" aria-hidden="true">
        <div class="modal-dialog" style="min-width: 70%">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="staticBackdropLabel">Modal title</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="name" class="control-label">Product Name:</label>
                                <input id="name" class="form-control" />
                            </div>
                            <div class="form-group">
                                <label for="desc" class="control-label">Description:</label>
                                <textarea id="desc" class="form-control"></textarea>
                            </div>
                            <div class="form-group">
                                <label for="price" class="control-label">Price</label>
                                <input id="price" type="number" class="form-control" />
                            </div>
                            <div class="form-group">
                                <label for="img" class="control-label">Choose img</label>
                                <input id="img" type="file" accept="image/*" class="form-control" />
                            </div>
                            <div class="form-group">
                                <label for="cate_id" class="control-label">Category</label>
                                <select id="cate_id" class="form-control">
                                    @foreach (Category c in @ViewBag.Cate)
                                    {
                                        <option value="@c.CategoryId">@c.CategoryName</option>
                                    }
                                </select>
                            </div>
                            <div class="form-group">
                                <buton onclick="CreateProduct()" class="btn btn-primary">Create</buton>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>


    <div class="modal fade" id="ProductModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="ProductModal" aria-hidden="true">
        <div class="modal-dialog" style="min-width: 70%">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="staticBackdropLabel">Modal title</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="nameProduct" class="control-label">Product Name:</label>
                                <input id="nameProduct" disabled class="form-control" />
                                <input id="idProduct" style="display: none" class="form-control" />
                            </div>
                            <div class="form-group">
                                <label for="descProduct" class="control-label">Description:</label>
                                <textarea id="descProduct" disabled class="form-control"></textarea>
                            </div>
                            <div class="form-group">
                                <label for="priceProduct" class="control-label">Price</label>
                                <input id="priceProduct" disabled type="number" class="form-control" />
                            </div>
                            <div class="form-group">
                                <label for="imgProduct" class="control-label">Choose image</label>
                                <input id="imgProduct" disabled type="file" accept="image/*" class="form-control" style="display: none" />
                                <img id="imgProductPreview" src="" alt="Image Product" style="width: 150px; height: 150px; object-fit: cover" />
                            </div>
                            <div class="form-group">
                                <label for="cate_idProduct" class="control-label">Category</label>
                                <select id="cate_idProduct" disabled class="form-control">
                                    @foreach (Category c in @ViewBag.Cate)
                                    {
                                        <option value="@c.CategoryId">@c.CategoryName</option>
                                    }
                                </select>
                            </div>
                            <div class="form-group">
                                <buton onclick="enableInput()" id="editBtn" class="btn btn-success">Edit</buton>
                                <buton onclick="DeleteProduct()" class="btn btn-danger">Delete</buton>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    const CreateProduct = () => {
        var name = $('#name').val();
        var desc = $('#desc').val();
        var price = $('#price').val();
        var imgFile = $('#img').prop('files')[0];
        var cate_id = $('#cate_id').val();


        var fileName = imgFile.name;
        var fileExtension = fileName.split('.').pop();

        var reader = new FileReader();
        reader.onloadend = function() {
            var imgDataUrl = reader.result; // Base64-encoded image data URL

            // Create the request payload
            var data = {
                Name: name,
                Description: desc,
                Price: price,
                Image: imgDataUrl,
                CategoryId: cate_id,
                extension: fileExtension
            };

            // Make the AJAX request
            $.ajax({
                url: 'https://localhost:7283/api/Product/AddProduct',
                method: 'POST',
                data: JSON.stringify(data),
                contentType: 'application/json',
                success: function(response) {
                    $('#CreateModal').modal('hide');
                    showToast('Green', 'Success', 'Create product success!');
                    LoadAllProduct();
                },
                error: function(xhr, status, error) {
                    console.log(error);
                }
            });
        };

        reader.readAsDataURL(imgFile);
    }

    const LoadAllProduct = () => {
        $.ajax({
            url: 'https://localhost:7283/api/Product/GetProducts',
            method: 'GET',
            success: function(response) {
                $('#productTableBody').empty();

                // Iterate over the array of products
                for (var i = 0; i < response.length; i++) {
                    var product = response[i];

                    // Construct the HTML for the table row
                    var productHtml = '<tr>' +
                        '<td>' + product.name + '</td>' +
                        '<td>' + product.price + '</td>' +
                        '<td><img src="../imgProduct/' + product.image + '" alt="Image Product" style="width: 150px; height: 150px; object-fit: cover" /></td>' +
                        '<td>' + product.category.categoryName + '</td>' +
                        '</tr>';

                    // Append the generated HTML to the table body
                    $('#productTableBody').append(productHtml);
                }
            }
        });
    }

    const GetProduct = id => {
        $.ajax({
            url: 'https://localhost:7283/api/Product/GetProductById/' + id,
            method: 'GET',
            success: function(response) {
                // Assign the values to the HTML elements
                $('#idProduct').val(response.id);
                $('#nameProduct').val(response.name);
                $('#descProduct').val(response.description);
                $('#priceProduct').val(response.price);
                $('#imgProductPreview').attr('src', '../imgProduct/' + response.image);
                $('#cate_idProduct').val(response.category.categoryId);
            }
        });
    }

    const enableInput = () => {
        if ($('#editBtn').text() === 'Edit') {
            $('#nameProduct, #descProduct, #priceProduct, #imgProduct, #cate_idProduct').prop('disabled', false);
            $('#editBtn').text("Save");
        } else {
            var name = $('#nameProduct').val();
            var desc = $('#descProduct').val();
            var price = $('#priceProduct').val();
            var imgFile = $('#imgProduct').prop('files')[0];
            var cate_id = $('#cate_idProduct').val();


            var fileName = imgFile.name;
            var fileExtension = fileName.split('.').pop();

            var reader = new FileReader();
            reader.onloadend = function() {
                var imgDataUrl = reader.result; // Base64-encoded image data URL

                // Create the request payload
                var data = {
                    Name: name,
                    Description: desc,
                    Price: price,
                    Image: imgDataUrl,
                    CategoryId: cate_id,
                    extension: fileExtension
                };

                // Make the AJAX request
                $.ajax({
                    url: 'https://localhost:7283/api/Product/UpdateProduct',
                    method: 'POST',
                    data: JSON.stringify(data),
                    contentType: 'application/json',
                    success: function(response) {
                        $('#CreateModal').modal('hide');
                        showToast('Green', 'Success', 'Update product success!');
                        LoadAllProduct();
                    },
                    error: function(xhr, status, error) {
                        console.log(error);
                    }
                });
            };

            reader.readAsDataURL(imgFile);
        }

    }

    const DeleteProduct = () => {
        const id = $('#idProduct').val();
        $.ajax({
            url: 'https://localhost:7283/api/Product/DeleteProduct/' + id,
            method: 'DELETE',
            success: function(response) {
                console.log(response)
                $('#ProductModal').modal('hide');
                showToast('Green', 'Success', 'Delete product success!');
                LoadAllProduct();
            },
            error: function(xhr, status, error) {
                console.log(error);
            }
        });
    }


</script>